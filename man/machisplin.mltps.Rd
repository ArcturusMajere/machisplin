% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/ensemble.machine.learning.thin.plate.splines.V20.R
\name{machisplin.mltps}
\alias{machisplin.mltps}
\title{Machine Learning Ensemble & Thin-Plate-Spline Interpolation}
\usage{
machisplin.mltps(int.values, covar.ras, n.cores = 1, tps = TRUE)
}
\arguments{
\item{int.values}{An data frame with the first two columns as coordinates of interpolated site named exactly as 'long' and 'lat', in this order, and any number of layers to downscale- each as a new column}

\item{tps}{if tps=TRUE then the residuals of the best model will be interpolated using a thin-plate-spline and the final downscaled layer will be adjusted by this layer (this is what ANUSPLIN does)}

\item{covar.ras=}{a raster or raster stack of high-resolution raster layers at resolution and extent of downscaling.  These layers will be used as co-variates and careful consideration should be given properly selecting these.}

\item{ncores}{number of CPUs to use for interpolating - each core will be assigned a layer to interpolate. Best to first try with a few cores- this process can require a lot of memory}
}
\value{
This script interpolates noisy multi-variate data through machine learning ensembling using six algorithms: boosted regression trees (BRT), linear models; generalized additive model, multivariate adaptive regression splines (MARS), support vector machines (SVM) and random forests. This function evaluates (via k-fold cross validation, where k=10) and methodâ€™s ability to predict the input data and ensembles of all combinations of the six algorithms.  The best model will have the lowest AICc (with the number of parameters in AICc calculation corresponding the number of models in ensemble).  After the best model is determined, the function will run ensemble on the full dataset.  Then residuals will be calculated and interpolated using thin-plate-smoothing splines, which will secondarily correct the final ensemble model.  This package is a free open-source machine learning analog to the expensive ANUSPLIN software. To output final R2 values, algorithm(s) used, and rasters for use in GIS; use the 'machisplin.write.geotiff' function
}
\description{
Machine Learning Ensemble & Thin-Plate-Spline Interpolation
}
\examples{
library(MACHISPLIN)

# Import a csv as shapefile:
Mydata<-read.delim("sampling.csv", sep=",", h=T)

#load rasters
ALT = raster("SRTM30m.tif")
CURV_V = raster("cs_curv.tif")
CURV_H = raster("long_cur.tif")
SLOPE = raster("ln_slope.tif")
REL_ALT= raster("relative_elevation500m.tif")
TWI = raster("TWI.tif")

# function input: raster brick of covarites
raster_stack<-stack(ALT,REL_ALT,SLOPE,TWI,CURV_V,CURV_H)

#run an ensemble machine learning thin plate spline 
interp.rast<-machisplin.mltps(int.values=Mydata, covar.ras=raster_stack, n.cores=2)

}
